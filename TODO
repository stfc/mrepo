### Disclaimer
This is my TODO list. If you're interested in one of these features, there
are 3 options. Either wait for someone to implement it, sponsor someone
to implement it or implement it yourself.

If you want to implement something, please contact me first so that we can
discuss acceptable implementations. In some cases I haven't thought about
it too deeply, but for others I know exactly what I require.

If you have other nice ideas that you think would be an improvement, please
contact me as well. :) Send an email to: Dag Wieers <dag@wieers.com>


### Back-end support
+ Add libcurl support and (optionally?) make it the default 
+ NFS support enable by default, using autofs (waiting for Serge Sterckx)
+ Add support for SRPM files (just put them into one directory /SRPMS)
+ Check files that do not match the regexp and compare filename to rpm headers
+ Make rsync/lftp download requests from the same server into 1 request (hardlinks)
+ Use mirrorlist option from .repo files as a source (for http)
+ Autocreate yum .repo files and apt .list files to be used by local clients
+ Add support for other remote synchronising tools (sitecopy, wget)

### Repository metadata
+ Create anaconda-style metadata for booting an updated installation
+ Complain when a required tool is not available
+ Add URPMI and Red Carpet support (help needed)
+ Update Apt release info transparantly when mrepo config changes (Tom G. Christensen)

### Reporting utility
+ Logwatch configuration for mrepo

### Configuration
+ Allow to specify rsync/lftp options on a per distribution basis (see ~/.lftp/rc)
+ Add more working distributions to /etc/mrepo.conf.d/

### Usability
+ Add selinux support

### Documentation
+ Add a mrepo and mrepo.conf manpage
+ Add documentation on how to configure clients
+ Add documentation about chaining mrepo servers
+ Comment the code more (pydoc strings)
+ ZeroConf support (or documentation)
+ Comply with PEP8: http://www.python.org/dev/peps/pep-0008/

### Internal python
+ Improve the copy/symlink/rename functions, using exceptions
+ Mirroring code should be in a separate class
+ File-operations may need to go to a separate class, use shutil ? (needs python 2.3)
+ Improve the remove and symlink stage (combine the check of existing links with creating and removing)

### Bugs
+ yum-arch stumbles on broken symlinks (https://devel.linux.duke.edu/bugzilla/show_bug.cgi?id=280)
+ Correct file permissions/ownerships of packages in /var/mrepo (add umask option)

### mrepocfg tool / generate a configuration for clients (Chandan Dutta Chowdhury)
+ The tool should accept a URL as an argument
+ Should have a list (-l) option to list the different distributions
+ Should have a target (-t) option to specify the configuration output format (apt/yum/smart)
+ It scans the URL given and looks for know repository metadata

### mrepogen tool / repository metadata
+ Replaces genbasedir, createrepo and yum-arch
+ Creates rsyncable bzip2 and gzip data
+ Uses 1 cachedir for all generation
+ Writes out all repository metadata in 1 cycle
+ Complains when files are damaged or unsigned
+ Creates a directory checksum to check for changes
+ Allow to generate x revisions of older packages (default to 2)
+ Self-contained (1 single file) but usable as module
+ Works on python 2.2.3 (RHEL3)
+ Understands directory layout, ie.
    if RPMS.repo is provided, use it as a base for all metadata
    if repo is provided, create symlinks in dirname() for RPMS.repo
+ Also see: http://people.redhat.com/laroche/pyrpm/

### mrepousb tool
+ Create a bootable USB stick and allow for 3rd party boot-images
